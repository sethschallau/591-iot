# imu_simulator.py
import paho.mqtt.client as mqtt
import time
import random
import json

BROKER = "broker.hivemq.com"
PORT = 1883
TOPIC = "sethschallaudoor"

client = mqtt.Client()
client.connect(BROKER, PORT)

def simulate_imu_event(event_type):
    if event_type == "open":
        # Random accelerometer + gyroscope values simulating a door open
        data = {
            "accel_x": round(random.uniform(1.5, 3.0), 2),
            "accel_y": round(random.uniform(-1.0, 1.0), 2),
            "accel_z": round(random.uniform(-0.5, 0.5), 2),
            "gyro_x": round(random.uniform(30, 60), 2),
            "gyro_y": round(random.uniform(0, 10), 2),
            "gyro_z": round(random.uniform(0, 10), 2),
        }
    else:  # close
        data = {
            "accel_x": round(random.uniform(-3.0, -1.5), 2),
            "accel_y": round(random.uniform(-1.0, 1.0), 2),
            "accel_z": round(random.uniform(-0.5, 0.5), 2),
            "gyro_x": round(random.uniform(-60, -30), 2),
            "gyro_y": round(random.uniform(0, 10), 2),
            "gyro_z": round(random.uniform(0, 10), 2),
        }

    return json.dumps(data)

# Simulate events
while True:
    event_type = random.choice(["open", "close"])
    imu_data = simulate_imu_event(event_type)
    print(f"Sending IMU Data [{event_type.upper()}]:", imu_data)
    client.publish(TOPIC, imu_data)
    time.sleep(5)  # wait 5 seconds between events
